name: Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches:
      - '*'
  # Run weekly on Monday
  schedule:
    - cron: 0 0 * * 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-ver: ['3.9', '3.10', '3.11', '3.12']

    name: Python ${{ matrix.python-ver }} check on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-ver }}

      - name: Install package & pytest for Mac & Ubuntu
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          pip install .[test]
        shell: bash

      - name: Install package & pytest for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          git config --system core.longpaths true
          pip install .[windows,test]
        shell: cmd

      - name: Run tests with coverage for Ubuntu on Python 3.12
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-ver == '3.12' }}
        uses: coactions/setup-xvfb@v1
        with:
          options: -screen 0 1600x1200x24
          run: |
            pytest --cov=neurocaps

      - name: Run test without coverage for Ubuntu from Python 3.9 to 3.11
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-ver != '3.12' }}
        uses: coactions/setup-xvfb@v1
        with:
          options: -screen 0 1600x1200x24
          run: |
            pytest .
          working-directory: tests

      - name: Run tests without coverage for Mac for all version
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          pytest .
        shell: bash
        working-directory: tests

      - name: Run tests without coverage for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          pytest .
        shell: cmd
        working-directory: tests

      - name: Upload coverage reports to Codecov for Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-ver == '3.12' }}
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
